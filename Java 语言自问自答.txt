关于Java 编程思想中 我所发现的！
1：多态的使用，主要应用在针对不同的动物，父类可以有其通用的方法，但是子类调用后有其特有的东西

猫吃鱼
狗啃骨头
	注意：如果需要调用父类的方法，仅仅需要super 即可！（方法名字相同，参数也相同）
	
2：关于重写和重载
重写：可以把父类可以修改的进行重新定义
重载：可以在父类中设置不同的参数，在子类中直接根据不同参数进行调用（方法名字相同，参数不同）

问题：
多态的实现方式
	1：重写
	2：接口的定义 插座上边的三口插头
		abstract：根据方法的特征进行定义抽象方法，但是没有方法的实现
		
	3：抽象类和抽象方法
		抽象类中可以有抽象方法，也可以不有抽象方法。
		
	
	抽象类和接口：抽象类只能单一继承，而接口可以多继承！
	
集合：

	1：Collection c = new ArrayList(); 其创建的这个对象，可以使用父类中的所有方法
	2：HashSet 与 TreeSet 的区别。
		Set set = new HashSet();
		c.add("a");
		Set sortSet = new TreeSet(c)；向下转型 
		打印set 和 打印sortSet 有区别！
			区别：在于直接排序了。但是不知道为什么
			问题来源：http://blog.csdn.net/u014136713/article/details/52089156
			
			
	关于集合问题：
		1：关于对数组的理解
		以下哪句关于 Java 数组的描述是正确的？
		创建之后，数组的大小是固定的（即不能更改）。（注意这个！！！）
		要获得数组的大小，可以使用 .length 属性。
		数组具有索引，这意味着数组的每个元素可通过一个唯一整数编号获得。
		数组可包含原语类型，也可以包含 Java 对象。
		上述所有选项。（正确答案）
		
		2：下边那个接口？？？
			列表 （List）：可保证保持它包含的项目顺序
			集  （set） ：仅允许使用某个特定值的一个实例
			映射（map）：允许您使用唯一键存储键/值对  
		
		
		
		
	

